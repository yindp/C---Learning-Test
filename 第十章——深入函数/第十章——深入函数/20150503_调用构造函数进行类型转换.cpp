////我们可以把数字当作对象赋给另一个对象，这样在对该赋值表达式进行计算时，首先要对数字进行类型转换，同时判断该类的构造函数的参数是否与数字的类型匹配，假如匹配则调用构造函数创建一个临时对象，跟着将该临时对象赋给赋值操作符左边的对象，最后调用析构函数删除对象。
//#include <iostream>
//using namespace std;
//class A
//{
//public:
//	explicit A(int i) { x = i; cout << "构造函数执行。\t" << x << endl; }//explicit关键字关闭函数的隐式转换。
//	~A() { cout << "析构函数执行。\t" << x << endl; }
//	void get() { cout << x << endl; }
//private:
//	int x;
//};
//int main()
//{
//	A a(99);
//	a.get();
//	//a = 1000;隐式转换，将1000转换为a对象然后赋值给a对象。先判断是否与a对象的参数类型一直，是，所以创建一个临时a对象，然后赋值把1000作为参数传入临时对象，然后将临时对象赋值给a对象。
//	a = A(1000);//显式转换
//	return 0;
//	//结束时调用析构函数删除对象：一个临时对象，a对象。
//}